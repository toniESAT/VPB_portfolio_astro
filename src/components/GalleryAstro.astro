---
import {
  getImageMetadata,
  readImageMetadata,
} from "../scripts/getImageData.ts";
import { Image } from "astro:assets";
// import ImageCard from "../components/ImageCard.astro";
import type { ImageMetadata } from "astro";

interface Props {
  // img_metadata: Record<string, () => Promise<{ default: ImageMetadata }>>;
  img_metadata: Record<string, any>;
}

const { img_metadata } = Astro.props;

const metadata : ImageMetadata[] = img_metadata.map((file: Record<string, any>) => file.default);

// console.log(metadata);

// const sum_height = images.reduce((sum, next) => {
//   return sum + next.height;
// }, 0);
---

<div class="gallery">
  {
    metadata.map((image: ImageMetadata) => (
      <a href={"#" + image.src}>
        <Image src={image} alt="" />
      </a>
    ))
  }
</div>

<div class="lightboxes">
  {
    metadata.map((image: ImageMetadata) => (
      <div class="lightbox" id={image.src}>
        <div class="lightbox-content">
          <a href="#!" class="close-button">
            <div class="close-button-x" />
          </a>
          <Image src={image} alt="" />
          <h3>{image.src}</h3>
          <p>{image.src}</p>
        </div>
      </div>
    ))
  }
</div>

<style>
  .gallery {
    display: grid;
    grid-template-columns: repeat(4, 200px);
    justify-content: center;
    align-content: center;
    grid-gap: 10px;
    /* height: 100vh; */
    margin: 2rem;
  }

  .gallery img {
    width: 200px;
    height: 200px;
    cursor: zoom-in;
  }
</style>

<style is:global>
  .lightbox {
    position: fixed;
    z-index: 1000;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.75);
    display: none;
  }

  .lightbox-content {
    position: relative;
    max-width: 75%;
    max-height: 80%;
    background: black;
    padding: 1em;
  }

  .lightbox-content img {
    max-height: 100%;
    max-width: 100%;
  }

  .lightbox:target {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .close-button {
    position: absolute;
    width: 2rem;
    height: 2rem;
    background: red;
    top: -1rem;
    right: -1rem;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .close-button-x {
    content: url("../assets/close_x.svg");
    width: 1rem;
  }
</style>
