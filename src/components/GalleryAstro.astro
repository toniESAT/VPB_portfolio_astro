---
import path from "path";
import { Image } from "astro:assets";
// import ImageCard from "../components/ImageCard.astro";
import type { ImageMetadata } from "astro";
import { LoremIpsum } from "lorem-ipsum";
import {
  getImageMetadata,
  readImageMetadata,
} from "../scripts/getImageData.ts";

interface Props {
  // img_metadata: Record<string, () => Promise<{ default: ImageMetadata }>>;
  img_metadata: Record<string, any>;
}

const { img_metadata } = Astro.props;

const metadata: ImageMetadata[] = img_metadata.map(
  (file: Record<string, any>) => file.default,
);

const sum_height = metadata.reduce((sum, next) => {
  return sum + next.height;
}, 0);

const lorem = new LoremIpsum({
  sentencesPerParagraph: {
    max: 8,
    min: 4,
  },
  wordsPerSentence: {
    max: 16,
    min: 4,
  },
});

const getName = (image: ImageMetadata) : string  => path.basename(image.src).split('?')[0];
---

<div class="gallery">
  {
    metadata.map((image: ImageMetadata) => (
      <a href={"#" + getName(image)}>
        <Image
          class="pic"
          src={image}
          alt=""
          widths={[240, 540, 720, image.width]}
          sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, ${image.width}px`}
        />
      </a>
    ))
  }
</div>

<div class="lightboxes">
  {
    metadata.map((image: ImageMetadata) => (
      <div class="lightbox" id={getName(image)}>
        <div class="lightbox-content">
          <a href="#!" class="close-button">
            <div class="close-button-x" />
          </a>
          <Image
            src={image}
            alt=""
            widths={[240, 540, 720, image.width]}
            sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, ${image.width}px`}
          />
          <h3>{getName(image)}</h3>
          <p>{lorem.generateParagraphs(2)}</p>
        </div>
      </div>
    ))
  }
</div>

<style>
  .gallery {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    height: 200vh;
  }

  .gallery a {
    margin: 0;
    margin: 1rem;
    display: block;
    width: 30%;
    height: fit-content;
    border: 1px solid black;
  }
  .pic {
    object-fit: cover;
    width: 100%;
    height: 100%;
    cursor: zoom-in;
  }
</style>

<style is:global>
  .lightbox {
    position: fixed;
    z-index: 1000;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.75);
    display: none;
  }

  .lightbox-content {
    position: relative;
    height: 80%;
    width: 80%;
    background: black;
    color: white;
  }

  .lightbox-content img {
    height: 100%;
    width: auto;
    float: left;
    padding: 1rem;
  }

  .lightbox:target {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .close-button {
    position: absolute;
    width: 2rem;
    height: 2rem;
    background: red;
    top: -1rem;
    right: -1rem;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .close-button-x {
    content: url("../assets/close_x.svg");
    width: 1rem;
  }
</style>
