---
import path from "path";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { LoremIpsum } from "lorem-ipsum";
import {
  getImageMetadata,
  readImageMetadata,
} from "../scripts/getImageData.ts";

interface Props {
  img_metadata: Record<string, any>;
}

const { img_metadata } = Astro.props;

const metadata: ImageMetadata[] = img_metadata.map(
  (file: Record<string, any>) => file.default,
);

const lorem = new LoremIpsum(
  {
    sentencesPerParagraph: {
      max: 8,
      min: 4,
    },
    wordsPerSentence: {
      max: 16,
      min: 4,
    },
  },
  "html",
);

const getName = (image: ImageMetadata): string =>
  path.basename(image.src).split("?")[0];
---

<div class="lightboxes">
  {
    metadata.map((image: ImageMetadata) => (
      <div class="lightbox" id={getName(image)}>
        <a class="background-link" href="#!" />
        <div class="lightbox-content">
          <a href="#!" class="close-button">
            <div class="close-button-x" />
          </a>
          <a href="" class="lightbox-img-wrapper">
            <Image
              class="lightbox-img"
              src={image}
              alt=""
              widths={[240, 540, 720, image.width]}
              sizes={`(max-width: 360px) 360px, (max-width: 720px) 720px, (max-width: 1600px) 1200px, ${image.width}px`}
            />
          </a>
          <div class="lightbox-text-wrapper">
            <h3 class="lightbox-text-title">{getName(image)}</h3>
            <div class="lightbox-text" set:html={lorem.generateParagraphs(2)} />
          </div>
        </div>
      </div>
    ))
  }
</div>

<style>
  .lightbox {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.75);
    pointer-events: none;
    opacity: 0;
    transition: opacity 500ms ease;
    z-index: 10000;
    will-change: opacity;
  }

  .lightbox:target {
    opacity: 1;
    pointer-events: all;
  }

  .lightbox .background-link {
    display: block;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -10;
  }

  .lightbox-content {
    display: flex;
    gap: 2rem;
    position: relative;
    height: 70%;
    width: 70%;
    background: black;
    color: white;
    padding: 2rem;
  }

  .lightbox-text-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: justify;
    overflow: hidden;
    width: 100%;
  }

  .lightbox-text {
    overflow: auto;
  }

  .lightbox-text-title {
    display: inline-block;
    margin: 0;
    padding-bottom: 1rem;
  }
  .lightbox-img-wrapper {
    display: flex;
    max-height: 100%;
  }

  .lightbox-img {
    display: block;
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }

  .close-button {
    position: absolute;
    top: 2rem;
    right: 2rem;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .close-button-x {
    content: url("../assets/icons/close_x.svg");
    width: 1.25rem;
  }

  @media (width < 992px) {
    .lightbox-content {
      flex-direction: column;
    }
    .lightbox-img-wrapper {
      height: 50%;
    }
  }
</style>

<!-- <script is:inline>
  function resize_lightbox_img() {
    let wrappers = Array.from(
      document.getElementsByClassName("lightbox-img-wrapper"),
    );

    wrappers.forEach((wrapper) => {
      ww = wrapper.offsetWidth;
      wh = wrapper.offsetHeight;

      wrapper_ar = ww / wh;

      img = wrapper.firstElementChild;
      img_ar = img.naturalWidth / img.naturalHeight;

      if (wrapper_ar > img_ar) 

    });
  }

  document.addEventListener("resize", resize_lightbox_img);
</script> -->
